*checkmate.txt*         For Neovim >= 0.10.0        Last change: 2025 April 12

==============================================================================
Table of Contents                                *checkmate-table-of-contents*

1. Installation                                       |checkmate-installation|
2. Usage                                                     |checkmate-usage|
3. Commands                                               |checkmate-commands|
4. Config                                                   |checkmate-config|

Inspired by the Todo+ <https://github.com/fabiospampinato/vscode-todo-plus> VS
Code extension (credit to @fabiospampinato
<https://github.com/fabiospampinato>)

- Stored as plain text/Markdown format
- Custom symbols
- Custom colors
- Multi-line toggle


==============================================================================
1. Installation                                       *checkmate-installation*

- install using lazy.nvim <https://github.com/folke/lazy.nvim>

>lua
    {
        "bngarren/checkmate.nvim",
        opts = {
            -- your configuration here
            -- or leave empty to use defaults
        },
    
        }
    }
<


==============================================================================
2. Usage                                                     *checkmate-usage*


1. OPEN A .TODO FILE OR CREATE A NEW ONE

As of now, the plugin is only activated when a buffer with `.todo` extension is
opened.


2. CREATE TODO ITEMS!

- Use mapped keys or commands

or

- Create them manually using typical Markdown format:

>md
    - [ ] Unchecked todo
    - [x] Checked todo
<

These will automatically convert when you leave insert mode!


3. MANAGE YOUR TASKS

- Toggle unchecked checked (can select multiple todo items at once)


==============================================================================
3. Commands                                               *checkmate-commands*


                                               *checkmate-:Checkmate-toggle*


:Checkmate toggle                      Toggle the todo item under the cursor (normal mode) or all todo items within the selection (visual mode)


                                               *checkmate-:Checkmate-create*


:Checkmate create                      Convert the current line to a todo item




==============================================================================
4. Config                                                   *checkmate-config*

>lua
    --- Checkmate configuration
    ---@class checkmate.Config
    ---@field enabled boolean Whether the plugin is enabled
    ---@field notify boolean Whether to show notifications
    ---@field log checkmate.LogSettings Logging settings
    ---@field keys ( table<string, checkmate.Action>| false ) Keymappings (false to disable)
    ---@field todo_markers checkmate.TodoMarkers Characters for todo markers (checked and unchecked)
    ---@field default_list_marker "-" | "*" | "+" Default list item marker to be used when creating new Todo items
    ---@field style checkmate.StyleSettings Highlight settings
    ---@field enter_insert_after_new boolean Enter insert mode after `:Checkmate create`
    
    ---@class checkmate.LogSettings
    --- Any messages above this level will be logged
    ---@field level (
    ---    | "trace"
    ---    | "debug"
    ---    | "info"
    ---    | "warn"
    ---    | "error"
    ---    | "fatal"
    ---    | vim.log.levels.DEBUG
    ---    | vim.log.levels.ERROR
    ---    | vim.log.levels.INFO
    ---    | vim.log.levels.TRACE
    ---    | vim.log.levels.WARN)?
    --- Should print log output to a scratch buffer
    --- Open with `:Checkmate debug_log`
    ---@field use_buffer boolean
    --- Should print log output to a file
    --- Open with `:Checkmate debug_file`
    ---@field use_file boolean
    --- The default path on-disk where log files will be written to.
    --- Defaults to `~/.local/share/nvim/checkmate/current.log` (Unix) or `C:\Users\USERNAME\AppData\Local\nvim-data\checkmate\current.log` (Windows)
    ---@field file_path string?
    
    ---@alias checkmate.Action "toggle" | "create"
    
    ---@class checkmate.TodoMarkers
    ---@field unchecked string Character used for unchecked items
    ---@field checked string Character used for checked items
    
    ---@class checkmate.StyleSettings Customize the style of markers and content
    ---@field list_marker vim.api.keyset.highlight Highlight settings for list markers
    ---@field unchecked vim.api.keyset.highlight Highlight settings for unchecked markers
    ---@field unchecked_content vim.api.keyset.highlight Highlight settings for unchecked content (todo item text)
    ---@field checked vim.api.keyset.highlight Highlight settings for checked markers
    ---@field checked_content vim.api.keyset.highlight Highlight settings for checked content (todo item text)
    
    ---@type checkmate.Config
    local _DEFAULTS = {
      enabled = true,
      notify = true,
      log = {
        level = "info",
        use_buffer = false,
        use_file = false,
      },
      -- Default keymappings
      keys = {
        ["<leader>Tt"] = "toggle", -- Toggle todo item
        ["<leader>Tn"] = "create", -- Create todo item
      },
      default_list_marker = "-",
      todo_markers = {
        unchecked = "□",
        checked = "✔",
      },
      style = {
        list_marker = { fg = "#888888" },
        unchecked = { fg = "#ff9500", bold = true },
        unchecked_content = { fg = "#ffffff" },
        checked = { fg = "#00cc66", bold = true },
        checked_content = { fg = "#aaaaaa", strikethrough = true },
      },
      enter_insert_after_new = false,
    }
<

Note: `checkmate.StyleSettings` uses highlight definition maps to define the
colors/style, refer to |nvim_set_hl()|

Generated by panvimdoc <https://github.com/kdheepak/panvimdoc>

vim:tw=78:ts=8:noet:ft=help:norl:
